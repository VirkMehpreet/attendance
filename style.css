:root {
    --w: 520px;
    --h: 240px;
    --accent: #e0a82e;
    --bg: #1b263b;
  }

  * { box-sizing: border-box; }
  body {
    margin: 0;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #0d1b2a;
    font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
    color: #f0e9d2;
  }

  /* Carousel container */
  .carousel {
    width: var(--w);
    height: var(--h);
    position: relative;
    overflow: hidden;
    border-radius: 12px;
    background: var(--bg);
    padding: 18px;
    box-shadow: 0 6px 18px rgba(0,0,0,0.5);
  }

  /* Put radios BEFORE the .slides in DOM so sibling selectors work */
  /* Hide radios off-screen (works even if display:none is overridden) */
  .carousel input[type="radio"] {
    position: absolute !important;
    left: -9999px !important;
    width: 1px !important;
    height: 1px !important;
    opacity: 0 !important;
    pointer-events: none !important;
  }

  /* Slides wrapper: MUST be flex so slides sit side-by-side */
  .slides {
    display: flex;
    width: 300%;            /* 3 slides -> 300% */
    height: 100%;
    transform: translateX(0);
    transition: transform 0.6s cubic-bezier(.22,.9,.3,1);
    animation: autoplay 12s linear infinite;
  }

  /* Each single slide */
  .slide {
    flex: 0 0 33.3333%;     /* so three equal columns inside 300% container */
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px;
    box-sizing: border-box;
    text-align: center;
  }

  .quote {
    width: 100%;
    padding: 16px;
    border-radius: 8px;
    background: linear-gradient(180deg, rgba(255,255,255,0.02), rgba(0,0,0,0.03));
  }

  .quote p { margin: 0; font-style: italic; font-size: 1.05rem; line-height: 1.4; }
  .quote h3 { margin-top: 12px; color: var(--accent); font-weight: 600; }

  /* Manual control via radios: when a radio is checked, force the transform */
  #r1:checked ~ .slides { animation-play-state: paused; transform: translateX(0%); }
  #r2:checked ~ .slides { animation-play-state: paused; transform: translateX(-33.3333%); }
  #r3:checked ~ .slides { animation-play-state: paused; transform: translateX(-66.6666%); }

  /* Dots */
  .dots {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 12px;
    display: flex;
    justify-content: center;
    gap: 10px;
    pointer-events: auto;
  }
  .dot {
    width: 10px;
    height: 10px;
    background: #808c98;
    border-radius: 50%;
    cursor: pointer;
    display: inline-block;
    transition: transform .12s, background .12s;
  }
  .dot:hover { transform: scale(1.08); }

  /* Highlight active dot */
  #r1:checked ~ .dots label[for="r1"],
  #r2:checked ~ .dots label[for="r2"],
  #r3:checked ~ .dots label[for="r3"] {
    background: var(--accent);
    transform: scale(1.12);
  }

  /* Arrows (we'll show a pair matching the current slide using the radio checked selectors) */
  .arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 38px;
    height: 38px;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    user-select: none;
    cursor: pointer;
    color: var(--accent);
    font-size: 20px;
    background: rgba(0,0,0,0.06);
  }
  .arrow:hover { background: rgba(0,0,0,0.12); color: #fff; }
  .prev { left: 12px; }
  .next { right: 12px; }

  /* We include all arrow labels but show only those that correspond to the currently checked radio */
  .arrows label { display: none; }

  /* For r1: prev -> r3, next -> r2 */
  #r1:checked ~ .arrows label[for="r3"],
  #r1:checked ~ .arrows label[for="r2"] { display:flex; }

  /* For r2: prev -> r1, next -> r3 */
  #r2:checked ~ .arrows label[for="r1"],
  #r2:checked ~ .arrows label[for="r3"] { display:flex; }

  /* For r3: prev -> r2, next -> r1 */
  #r3:checked ~ .arrows label[for="r2"],
  #r3:checked ~ .arrows label[for="r1"] { display:flex; }

  /* Autoplay keyframes: show slide1 -> slide2 -> slide3 -> back */
  @keyframes autoplay {
    0%   { transform: translateX(0%); }
    25%  { transform: translateX(0%); }
    33%  { transform: translateX(-33.3333%); }
    58%  { transform: translateX(-33.3333%); }
    66%  { transform: translateX(-66.6666%); }
    91%  { transform: translateX(-66.6666%); }
    100% { transform: translateX(0%); }
  }

  /* Pause on hover */
  .carousel:hover .slides { animation-play-state: paused; }

  /* small responsive tweak */
  @media (max-width: 560px) {
    :root { --w: 92vw; --h: 260px; }
  }



ul.topnav {
  list-style-type: none;
  margin: 0;
  padding: 0;
  overflow: hidden;
  background-color: #333;
}

ul.topnav li {float: left;}

ul.topnav li a {
  display: block;
  color: white;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
}

ul.topnav li a:hover:not(.active) {background-color: #111;}

ul.topnav li a.active {background-color: #04AA6D;}

ul.topnav li.right {float: right;}

@media screen and (max-width: 600px) {
  ul.topnav li.right, 
  ul.topnav li {float: none;}
}
